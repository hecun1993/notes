使用 java 的方式配置 sping mvc 时
    1. 采用继承 WebMvcConfigurerAdapter 类
    2. 采用继承 WebMvcConfigurationSupport 类

    两个类都是来自包org.springframework.web.servlet.config.annotation
    两个类都可以实现配置mvc。两者都可以配置视图解析器以及静态资源等 
总结： 
    WebMvcConfigurationSupport 与 WebMvcConfigurerAdapter 都可以配置MVC,WebMvcConfigurationSupport 支持的自定义的配置更多更全，WebMvcConfigurerAdapter有的WebMvcConfigurationSupport 都有

首先，@EnableWebMvc = WebMvcConfigurationSupport，使用了@EnableWebMvc注解等于扩展了WebMvcConfigurationSupport但是没有重写任何方法

所以有以下几种使用方式：

    @EnableWebMvc + extends WebMvcConfigurationAdapter，在扩展的类中重写父类的方法即可，这种方式会屏蔽springboot的@EnableAutoConfiguration中的设置

    extends WebMvcConfigurationSupport，在扩展的类中重写父类的方法即可，这种方式会屏蔽springboot的@EnableAutoConfiguration中的设置

    extends WebMvcConfigurationAdapter，在扩展的类中重写父类的方法即可，这种方式依旧使用springboot的@EnableAutoConfiguration中的设置

    在WebMvcConfigurationSupport类（@EnableWebMvc）和 @EnableAutoConfiguration 都有一些默认的设定 

    当你使用@EnableWebMvc来配置spring mvc时，会把WebMvcConfigurationSupport当成配置文件来用，将其中所有标识有@Bean注解的方法配置成bean，这就成了Spring mvc的默认配置

    Spring mvc提供的默认实现是 DelegatingWebMvcConfiguration ，覆盖父类的方法之前，它会寻找容器中所有的WebMvcConfigurer实现类，将所有WebMvcConfigurer实现类中的配置组合起来，组成一个超级配置，这样，WebMvcConfigurationSupport中的bean发布时，就会把这所有配置都带上了。
        (public class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport)