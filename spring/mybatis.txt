1. mybatis:
    sqlMapConfig.xml，是mybatis的全局配置文件，配置了数据源、事务管理.
    mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。需要在sqlMapConfig.xml中加载。
    
    通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂,由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行

    - mybatis底层自定义了Executor执行器接口,用来操作数据库;
    - Mapped Statement是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。
    - Excutor通过Mapper Statement对象实现输入参数/输出结果与java对象的映射.
    
2. #{}和${}
    #{} 参数占位符，Mybatis会将sql中的#{}替换为?号，在sql执行前会使用PreparedStatement的参数设置方法，按序给sql的?号占位符设置参数值。会自动为其中的值添加’’，其中的值可以任意写，比如写成v
        #{}可以有效防止sql注入
        自动进行java类型和jdbc类型转换
    ${} 字符串拼接，静态文本替换。不会自动为其中的值添加’’，而且其中的值必须写成value
        不进行jdbc类型转换
    Select * from user where id = #{v}
    Select * from user where username like “%${value}%”

3. mybatis和hibernate的区别
    Mybatis不完全是一个ORM框架，需要自己编写Sql语句。mybatis可以通过XML或注解方式灵活配置要运行的sql语句，并将java对象和sql语句映射生成最终执行的sql，最后将sql执行的结果再映射生成java对象。

    Mybatis可以编写原生态sql，可严格控制sql执行性能，灵活度高，但是灵活的前提是mybatis无法做到数据库无关性，如果需要实现支持多种数据库的软件则需要自定义多套sql映射文件，工作量大。

4. Mapper接口开发 --- 取代传统的Dao开发模式
    1、  Mapper.xml文件中的namespace与mapper接口的类路径相同。
    2、  Mapper接口方法名和Mapper.xml中定义的每个statement的id相同 
    3、  Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同
    4、  Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同

    Dao接口，就是人们常说的Mapper接口，接口的全限名，就是映射文件中的namespace的值，接口的方法名，就是映射文件中MappedStatement的id值，接口方法内的参数，就是传递给sql的参数。

    Mapper接口是没有实现类的，当调用接口方法时，接口全限名+方法名拼接字符串作为key值，可唯一定位一个MappedStatement，在Mybatis中，每一个<select>、<insert>、<update>、<delete>标签，都会被解析为一个MappedStatement对象。

    Dao接口的工作原理是JDK动态代理，Mybatis运行时会使用JDK动态代理为Dao接口生成代理proxy对象，代理对象proxy会拦截接口方法，转而执行MappedStatement所代表的sql，然后将sql执行结果返回。


通过xml配置mybatis:
1. 配置DataSource(指定username, password, url等)
2. 配置SqlSessionFactory
    需要注入DataSource和mybatis-config.xml全局配置文件
3. 配置MapperScannerConfigurer
    需要注入basePackages和sqlSessionFactory
4. 创建mybatis-config.xml, mapper接口类, sql映射文件

通过springboot
1. 引入mybatis starter
2. 在application.properties中加入DataSource的配置
    spring.datasource.url=jdbc:mysql://localhost:3306/user?characterEncoding=UTF-8
    spring.datasource.username=root
    spring.datasource.password=123456
    spring.datasource.driver-class-name=com.mysql.jdbc.Driver
    mybatis.config-location=classpath:/mybatis/mybatis-config.xml
    (这样的配置, 默认启用的是tomcat提供的数据库连接池)
3. 创建mybatis-config.xml, mapper接口类, sql映射文件

==============================================

MyBatis的配置
全局XML配置文件
	MyBatis 全局XML配置文件包含影响MyBatis行为的设置和属性。

SQL Mapper XML配置文件
	SQL Mapper XML 配置用于映射SQL 模板语句与Java类型的配置。

SQL Mapper Annotation
    SQL Mapper Annotation是Java Annotation的方式替代SQL Mapper XML配置文件。

