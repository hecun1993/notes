Log4j

    Log4j 是目前最为流行的Java 日志框架之一，虽然已经停滞发展，并逐步被Logback和Log4j 2 等日志框架所替代，可是无法掩饰光辉历程，以及优良的设计理念。

    Log4j API
        日志对象（org.apache.log4j.Logger）
        日志级别（org.apache.log4j.Level）
        日志管理器（org.apache.log4j.LogManager）
        日志仓储（org.apache.log4j.spi.LoggerRepository）
        日志附加器（org.apache.log4j.Appender）
        日志过滤器（org.apache.log4j.spi.Filter）
        日志格式布局（org.apache.log4j.Layout）
        日志事件（org.apache.log4j.LoggingEvent）
        日志配置器（org.apache.log4j.spi.Configurator） xml / properties
        日志诊断上下文（org.apache.log4j.NDC(嵌套)、org.apache.log4j.MDC(映射)）

因为在starter-web中, 本身引入了slf4j, 所以, 要看到Log4j的特性, 就必须排除slf4j的包

<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
</dependency>

<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-web</artifactId>
    <exclusions>
        <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </exclusion>
    </exclusions>
</dependency>

把log4j.properties放在classpath下, 由于LogManager类的作用, 会自动读取这个propeties文件
必须有这个文件, 才能用.

log4j.rootLogger=DEBUG, com
log4j.appender.com=org.apache.log4j.ConsoleAppender
log4j.appender.com.layout=org.apache.log4j.PatternLayout
log4j.appender.com.layout.conversionPattern=[%t] %-5p %c - %m%n

Logger logger = Logger.getLogger(Log4jTest.class.getName());
logger.info("Hello,World");

======================================

WARN的级别比INFO高, 所以, 如果设置的日志级别是WARN, 那么, logger.info()的内容就不会输出了

log4j是最开始有的日志框架, 在2015年不再维护了
新出来的logback和log4j2(logging)框架
整合两者, 会有slf4j框架和apache的common-logging框架
但所有的框架设计思想都是基于log4j的

logback是springboot默认支持的
log4j2性能更好, 适合高并发

引入log4j2

1. pom文件

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
        <exclusions>
            <exclusion>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
            </exclusion>
        </exclusions>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <!--帮助实现高性能日志输出的功能的依赖-->
    <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>3.3.6</version>
    </dependency>

2. 添加log4j2.xml文件配置日志输出信息