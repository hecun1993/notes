#### InitializingBean

```java
public interface InitializingBean {
	void afterPropertiesSet() throws Exception;
}
```

InitializingBean接口为bean提供了初始化方法的方式，它只包括afterPropertiesSet方法，凡是继承该接口的类，在初始化bean的时候(指在测试类中, 实例化上下文, 但并没有执行getBean方法的时刻)会执行该方法。

初始化方法: 如afterPropertiesSet和任意已声明的init方法

注意:
在spring初始化bean的时候，如果该bean是实现了InitializingBean接口，并且同时在配置文件中指定了init-method，系统则是先调用afterPropertiesSet方法，然后在调用init-method中指定的方法。

总结:
1：spring为bean提供了两种初始化bean的方式，实现InitializingBean接口，实现afterPropertiesSet方法，或者在配置文件中同过init-method指定，两种方式可以同时使用

2：实现InitializingBean接口是直接调用afterPropertiesSet方法，比通过反射调用init-method指定的方法效率相对来说要高点。但是init-method方式消除了对spring的依赖

3：如果调用afterPropertiesSet方法时出错，则不调用init-method指定的方法。

(源码来自: AbstractAutowireCapableBeanFactory#invokeInitMethods)

补充:
1. DisposableBean接口和InitializingBean接口一样, 是在销毁之前执行.

2. 在指定方法上加上@PostConstruct或@PreDestroy注解来制定该方法是在初始化之后还是销毁之前调用。