性能测试包括以下这些内容

负载测试: 逐步加压, 达到既定的性能阈值的目标(cpu使用率小于80%)
压力测试: 什么条件能把系统压崩溃
并发测试: 同一时间, 多个虚拟用户同时访问同一模块同一功能
容量测试: 数据库层面的容量预估, 获得数据库的最佳容量能力. 在一定并发, 不同基础数据量下, 观察数据库处理能力
可靠性测试: 系统在高压情况下, 长时间运行是否稳定(内存溢出)
异常测试: 系统架构方面的测试. 如在负载均衡架构中, 测试宕机, 节点挂掉等情况下系统的反应

TPS:
每秒钟系统能够处理的事务数(事务数不一定等于请求数, 因为一个事务可能包含多个请求)
事务响应时间与请求响应时间相比, 事务响应时间更多针对用户而言, 如转账.

并发用户数: 
同一单位时间内, 对系统发起请求的用户数量, 没有严格意义上的并发, 并发总有先后, 所以并发讲的是一个时间范围内

吞吐量:
一次性能测试中, 网络上传输的数据量的总和

吞吐率: 
单位时间内, 网络上传输的数据量

性能测试的工作流程:
需求分析 -> 性能指标制定 -> 脚本开发 -> 场景设置(接口比例分析) -> 监控部署(除了jemeter软件之外, 自己设置的监控系统) -> 测试执行 -> 性能分析 -> 性能调优 -> 测试报告

在测试之前, 将系统进行分层: 
显示层(web Android IOS H5)
逻辑控制层(Api)
数据存储层(mysql mongodb redis)