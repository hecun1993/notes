git操作流程：

git clone 一份origin的代码到本地，准备进行开发

fork 
	复制一份代码到自己的账号，作为自己的远程仓库

git remote add self git@git.elenet.me:cun.he/esmart.git 
	给自己的远程仓库起名字为self，并建立起本地仓库和self仓库的联系。
git remote add origin https://github.com/hecun1993/studygit.git

git checkout -b etrace
	在本地创建创建一个etrace分支，并切换到etrace分支上。

注意.gitignore文件

git remote 查看远程库的信息

git add .
git commit -m "commit to etrace"
	把代码提交到本地的etrace分支

更新本地develop分支上的代码，因为在这段时间，别人可能进行提交，所以要把最新的代码同步到本地的develop分支。
	先切换分支
	git checkout develop
	再拉下代码来
	git pull --rebase origin develop

切换回etrace分支，
git checkout etrace
git rebase develop
	在etrace分支上，把etrace分支上的代码合并到develop上

git add .
git rebase --continue

git push self etrace
	把本地etrace分支上的代码提交到self远程仓库中

在网页上进行pull request请求，提交到origin的develop分支上
或者
git push origin develop

克隆制定分支
git clone -b dev https://xxx.git

git初始化配置:
	git config --global user.name "hecun1993"
	git config --global user.email "hecun93@gmail.com"
	git config --list

	git init 创建版本库，多一个.git的目录

	git status 
	查看仓库当前的状态。说明文件被修改过了，但还没有准备提交的修改。
	git diff readme.md
	告诉我们文件在工作区中具体做了哪些修改，这样在提交的时候放心。（对比的是不同时间点文件库的差别）

为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件。

git初始化

windows上连接github的办法:

github上有用户名和邮箱, 直接替换
ssh-keygen -t rsa -C "hecun93@163.com"
然后把.ssh文件夹中的id_rsa.pub复制到github中即可

首先在github上创建自己的项目
然后回到项目路径, 创建README.md, 里面写上项目名字
创建.gitignore

*.class

#package file
*.war
*.ear

#kdiff3 ignore
*.orig

#maven ignore
target/

#eclipse ignore
.settings/
.project
.classpath

#idea
.idea/
/idea/
*.ipr
*.iml
*.iws

# temp file
*.log
*.cache
*.diff
*.patch
*.tmp

# system ignore
.DS_Store
Thumbs.db

然后执行
git init
git status 哪些文件发生了变化
git add .
git commit -am ""

git remote add origin git@git.oschina.net:immoccode/mmall_learning.git

查看分支
git branch
git branch -r

git pull
git push -u -f origin master

git checkout -b v1.0 origin/master
git push origin HEAD -u

git安装
https://github.com/git/git/releases?after=v2.9.1

yum -y install zlib-devel openssl-devel cpio expat-devel gettext-devel curl-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker

配置用户名和密码, 在提交代码的记录上会展示
git config --global user.name "hecun93"
git config --global user.email "hecun93@gmail.com"

git config --global core.autocrlf false
git config --global core.quotepath off

ssh -keygen -t rsa -C "hecun93@gmail.com"
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub

(eval `ssh-agent`)

